name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@master
      with:
        submodules: 'recursive'

    - name: Initialize VS C++ environment
      if: startsWith(matrix.os,'windows')
      run: |
        call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install twine cibuildwheel==1.3.0

    - name: Build wheel
      env:
        CIBW_BUILD: "cp3?-*"
        CIBW_SKIP: "*-win32 *-manylinux_i686"
        CIBW_MANYLINUX_X86_64_IMAGE: "dockcross/manylinux2010-x64"
        CIBW_TEST_REQUIRES: "pytest"
        CIBW_TEST_COMMAND: "python -m pytest /project/tests/"
        CIBW_BEFORE_BUILD: "python -m pip install cython"
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./wheelhouse
